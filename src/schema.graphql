# import Game from './generated/prisma.graphql'
# import Pattern from './generated/prisma.graphql'
# import User from './generated/prisma.graphql'
# import Word from './generated/prisma.graphql'
# import PatternType from './generated/prisma.graphql'
# import FocusType from './generated/prisma.graphql'
# import Focus from './generated/prisma.graphql'

type Query {
  info: String!
  games: [Game!]!
  game(id: ID!): Game
  users: [User!]!
  user(id: ID!): User
  patterns: [Pattern!]!
  pattern(pattern: PatternType!): Pattern
  words: [Word!]!
  word(id: ID!): Word
}

type Mutation {
  createPattern(
    name: String!
    description: String!
    pattern: PatternType!
    focusType: FocusType!
  ): Pattern!
  updatePattern(
    name: String
    description: String
    pattern: PatternType
    focusType: FocusType
  ): Pattern
  deletePattern(id: ID!): Pattern
  createGame(
    pattern: PatternType!
    focus: Focus!
    size: Int!
    words: [String!]!
  ): Game!
  createWord(
    word: String!
    group: String!
    beginning: String!
    ending: String
    vowel: String
  ): Word!
  signup(
    name: String!
    email: String!
    password: String!
    confirmPassword: String!
  ): AuthPayload
  login(email: String!, password: String!): AuthPayload
  recover(email: String!): User
  reset(resetToken: String!, password: String!): User!
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  email: String!
  games: [Game!]!
}
